{"ast":null,"code":"var _jsxFileName = \"/Users/keisukeyoshida/wow/TodoApp-react-nodejs/client/src/context/auth/authState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport axiosClient from '../../config/axios';\nimport authToken from '../../config/token';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport { SUCCESSFUL_SIGNUP, SIGNUP_FAILED, GET_USER, SUCCESSFUL_LOGIN, LOGIN_FAILED, LOG_OUT } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuth: null,\n    user: null,\n    alertMessage: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const signUpUser = async data => {\n    try {\n      const response = await axiosClient.post('/api/users', data);\n      dispatch({\n        type: SUCCESSFUL_SIGNUP,\n        payload: response.data\n      });\n      getUserData();\n    } catch (error) {\n      const alert = {\n        msg: error.response.data.msg,\n        category: 'alert-error'\n      };\n      dispatch({\n        type: SIGNUP_FAILED,\n        payload: alert\n      });\n    }\n  };\n\n  const logInUser = async data => {\n    try {\n      const response = await axiosClient.post('/api/auth', data);\n      dispatch({\n        type: SUCCESSFUL_LOGIN,\n        payload: response.data\n      });\n      getUserData();\n    } catch (error) {\n      const alert = {\n        msg: error.response.data.msg,\n        category: 'alert-error'\n      };\n      console.log(error.response.data.msg);\n      dispatch({\n        type: LOGIN_FAILED,\n        payload: alert\n      });\n    }\n  };\n\n  const getUserData = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      authToken(token);\n    }\n\n    try {\n      const response = await axiosClient.get('/api/auth');\n      dispatch({\n        type: GET_USER,\n        payload: response.data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAILED\n      });\n    }\n  };\n\n  const logOut = () => {\n    dispatch({\n      type: LOG_OUT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuth: state.isAuth,\n      user: state.user,\n      alertMessage: state.alertMessage,\n      loading: state.loading,\n      signUpUser,\n      logInUser,\n      getUserData,\n      logOut\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/keisukeyoshida/wow/TodoApp-react-nodejs/client/src/context/auth/authState.js"],"names":["React","useReducer","authContext","axiosClient","authToken","AuthContext","AuthReducer","SUCCESSFUL_SIGNUP","SIGNUP_FAILED","GET_USER","SUCCESSFUL_LOGIN","LOGIN_FAILED","LOG_OUT","AuthState","props","initialState","token","localStorage","getItem","isAuth","user","alertMessage","loading","state","dispatch","signUpUser","data","response","post","type","payload","getUserData","error","alert","msg","category","logInUser","console","log","get","logOut","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport authContext from './authContext';\nimport axiosClient from '../../config/axios';\nimport authToken from '../../config/token';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport {\n  SUCCESSFUL_SIGNUP,\n  SIGNUP_FAILED,\n  GET_USER,\n  SUCCESSFUL_LOGIN,\n  LOGIN_FAILED,\n  LOG_OUT,\n} from '../../types';\n\n\nconst AuthState = (props) => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuth: null,\n        user: null,\n        alertMessage: null,\n        loading: true,\n    };\n    \n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const signUpUser = async (data) => {\n        try {\n            const response = await axiosClient.post('/api/users', data);\n            dispatch({\n                type: SUCCESSFUL_SIGNUP,\n                payload: response.data,\n            });\n            getUserData();\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alert-error',\n            };\n            dispatch({\n                type: SIGNUP_FAILED,\n                payload: alert,\n            });\n        }\n    };\n    const logInUser = async (data) => {\n        try {\n            const response = await axiosClient.post('/api/auth', data);\n            dispatch({\n                type: SUCCESSFUL_LOGIN,\n                payload: response.data,\n            });\n            getUserData();\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alert-error',\n            };\n            console.log(error.response.data.msg);\n            dispatch({\n                type: LOGIN_FAILED,\n                payload: alert,\n            });\n        }\n    };\n    const getUserData = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            authToken(token);\n        }\n        try {\n            const response = await axiosClient.get('/api/auth');\n            dispatch({\n                type: GET_USER,\n                payload: response.data.user,\n            });\n        } catch (error) {\n            dispatch({\n                type: LOGIN_FAILED,\n            });\n        }\n    };\n    const logOut = () => {\n        dispatch({\n            type: LOG_OUT,\n        });\n    };\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuth: state.isAuth,\n                user: state.user,\n                alertMessage: state.alertMessage,\n                loading: state.loading,\n                signUpUser,\n                logInUser,\n                getUserData,\n                logOut,\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}