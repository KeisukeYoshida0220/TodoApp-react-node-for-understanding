{"ast":null,"code":"var _jsxFileName = \"/Users/keisukeyoshida/wow/TodoApp-react-nodejs/client/src/context/auth/authState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axiosClient from '../../config/axios';\nimport authToken from '../../config/token';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport { SUCCESSFUL_SIGNUP, SIGNUP_FAILED, GET_USER, SUCCESSFUL_LOGIN, LOGIN_FAILED, LOG_OUT } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuth: null,\n    user: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const signUpUser = async data => {\n    try {\n      const response = await axiosClient.post('api/users', data);\n      alert(data);\n      dispatch({\n        type: SUCCESSFUL_SIGNUP,\n        payload: response.data\n      });\n      alert(\"push\");\n      console.log(data); // statements\n    } catch (error) {\n      // statements\n      console.log(error); // dispatch({\n      //   type: SIGNUP_FAILED,\n      // });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuth: state.isAuth,\n      user: state.user,\n      // alertMessage: state.alertMessage,\n      // loading: state.loading,\n      signUpUser // logInUser,\n      // getUserData,\n      // logOut,\n\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/keisukeyoshida/wow/TodoApp-react-nodejs/client/src/context/auth/authState.js"],"names":["React","useReducer","axiosClient","authToken","AuthContext","AuthReducer","SUCCESSFUL_SIGNUP","SIGNUP_FAILED","GET_USER","SUCCESSFUL_LOGIN","LOGIN_FAILED","LOG_OUT","AuthState","props","initialState","token","localStorage","getItem","isAuth","user","state","dispatch","signUpUser","data","response","post","alert","type","payload","console","log","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,iBADF,EAEEC,aAFF,EAGEC,QAHF,EAIEC,gBAJF,EAKEC,YALF,EAMEC,OANF,QAOO,aAPP;;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,MAAM,EAAE,IAFW;AAGnBC,IAAAA,IAAI,EAAE;AAHa,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACI,WAAD,EAAcS,YAAd,CAApC;;AAEA,QAAMQ,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMtB,WAAW,CAACuB,IAAZ,CAAiB,WAAjB,EAA8BF,IAA9B,CAAvB;AACAG,MAAAA,KAAK,CAACH,IAAD,CAAL;AAEAF,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAErB,iBADC;AAEPsB,QAAAA,OAAO,EAAEJ,QAAQ,CAACD;AAFX,OAAD,CAAR;AAKAG,MAAAA,KAAK,CAAC,MAAD,CAAL;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAVE,CAWF;AACD,KAZD,CAYE,OAAOQ,KAAP,EAAc;AACd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAFc,CAGd;AACA;AACA;AACD;AACF,GApBD;;AAuBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE;AACLhB,MAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELG,MAAAA,MAAM,EAAEE,KAAK,CAACF,MAFT;AAGLC,MAAAA,IAAI,EAAEC,KAAK,CAACD,IAHP;AAIL;AACA;AACAG,MAAAA,UANK,CAOL;AACA;AACA;;AATK,KADP;AAAA,cAYGT,KAAK,CAACmB;AAZT;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjDD;;GAAMpB,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport axiosClient from '../../config/axios';\nimport authToken from '../../config/token';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport {\n  SUCCESSFUL_SIGNUP,\n  SIGNUP_FAILED,\n  GET_USER,\n  SUCCESSFUL_LOGIN,\n  LOGIN_FAILED,\n  LOG_OUT,\n} from '../../types';\n\n\nconst AuthState = (props) => {\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuth: null,\n    user: null,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const signUpUser = async (data) => {\n    try {\n      const response = await axiosClient.post('api/users', data);\n      alert(data);\n\n      dispatch({\n        type: SUCCESSFUL_SIGNUP,\n        payload: response.data,\n      });\n\n      alert(\"push\");\n      console.log(data);\n      // statements\n    } catch (error) {\n      // statements\n      console.log(error);\n      // dispatch({\n      //   type: SIGNUP_FAILED,\n      // });\n    }\n  };\n\n\n  return(\n    <AuthContext.Provider\n    value={{\n      token: state.token,\n      isAuth: state.isAuth,\n      user: state.user,\n      // alertMessage: state.alertMessage,\n      // loading: state.loading,\n      signUpUser,\n      // logInUser,\n      // getUserData,\n      // logOut,\n    }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}